-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2025-01-10 04:09:46 CET
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE adresy (
    id_adresy        INTEGER NOT NULL,
    ulica            VARCHAR2(45 CHAR),
    numer_budynku    INTEGER,
    numer_mieszkania INTEGER
);

ALTER TABLE adresy ADD CONSTRAINT adresy_pk PRIMARY KEY ( id_adresy );

CREATE TABLE adresy_klientow (
    klienci_id_fk      INTEGER NOT NULL,
    adresy_id_fk       INTEGER NOT NULL,
    miejscowosci_id_fk INTEGER NOT NULL
);

CREATE TABLE adresy_lokalizacji (
    lokalizacja_id_fk  INTEGER NOT NULL,
    adresy_id_fk       INTEGER NOT NULL,
    miejscowosci_id_fk INTEGER NOT NULL
);

CREATE TABLE adresy_pracownikow (
    adresy_id_fk       INTEGER NOT NULL,
    pracownicy_id_fk   INTEGER NOT NULL,
    miejscowosci_id_fk INTEGER NOT NULL
);

CREATE TABLE czas_zamowienia (
    id_czas_zamowienia         INTEGER NOT NULL,
    data_dostawy_zamowienia    DATE,
    godzina_dostawy_zamowienia DATE,
    data_zakupu_zamowienia     DATE,
    godzina_zakupu_zamowienia  DATE,
    zamowienia_id_fk           INTEGER NOT NULL
);

ALTER TABLE czas_zamowienia ADD CONSTRAINT czas_zamowienia_pk PRIMARY KEY ( id_czas_zamowienia );

CREATE TABLE gatunek_muzyczny (
    id_gatunek_muzyczny      INTEGER NOT NULL,
    nazwa_gatunku_muzycznego VARCHAR2(30 CHAR),
    grupy_wiekowe_id_fk      INTEGER NOT NULL
);

ALTER TABLE gatunek_muzyczny ADD CONSTRAINT gatunek_muzyczny_pk PRIMARY KEY ( id_gatunek_muzyczny );

CREATE TABLE grupy_materialow (
    id_grupy_materialow    INTEGER NOT NULL,
    nazwa_grupy_materialow VARCHAR2(50 CHAR),
    zamowienia_id_fk       INTEGER NOT NULL
);

ALTER TABLE grupy_materialow ADD CONSTRAINT grupy_materialow_pk PRIMARY KEY ( id_grupy_materialow );

CREATE TABLE grupy_wiekowe (
    id_grupy_wiekowe               INTEGER NOT NULL,
    minimalny_wiek_grupy_wiekowej  INTEGER,
    maksymalny_wiek_grupy_wiekowej INTEGER,
    zabawy_id_fk                   INTEGER NOT NULL
);

ALTER TABLE grupy_wiekowe ADD CONSTRAINT grupy_wiekowe_pk PRIMARY KEY ( id_grupy_wiekowe );

CREATE TABLE informacja_zwrotna (
    id_informacja_zwrotna INTEGER NOT NULL,
    cena_koncowa          FLOAT(2),
    o_ile_przedluzone     INTERVAL DAY (0) TO SECOND(0),
    wydarzenie_id_fk      INTEGER NOT NULL
);

ALTER TABLE informacja_zwrotna ADD CONSTRAINT informacja_zwrotna_pk PRIMARY KEY ( id_informacja_zwrotna );

CREATE TABLE klienci (
    id_klienci       INTEGER NOT NULL,
    imie_klienta     VARCHAR2(35 CHAR),
    nazwisko_klienta VARCHAR2(30 CHAR)
);

ALTER TABLE klienci ADD CONSTRAINT klienci_pk PRIMARY KEY ( id_klienci );

CREATE TABLE kontakt_do_klienta (
    id_kontakt_do_klienta  INTEGER NOT NULL,
    adres_email_klienta    VARCHAR2(50 CHAR),
    numer_telefonu_klienta VARCHAR2(12 CHAR),
    klienci_id_fk          INTEGER NOT NULL
);

ALTER TABLE kontakt_do_klienta ADD CONSTRAINT kontakt_do_klienta_pk PRIMARY KEY ( id_kontakt_do_klienta );

CREATE TABLE kontakt_do_pracownika (
    id_kontakt_do_pracownika INTEGER NOT NULL,
    adres_do_pracownika      VARCHAR2(50 CHAR),
    numer_telefonu_klienta   VARCHAR2(12 CHAR),
    pracownicy_id_fk         INTEGER NOT NULL
);

ALTER TABLE kontakt_do_pracownika ADD CONSTRAINT kontakt_do_pracownika_pk PRIMARY KEY ( id_kontakt_do_pracownika );

CREATE TABLE lokalizacja (
    id_lokalizacja           INTEGER NOT NULL,
    uwagi_do_lokalizacji     VARCHAR2(50 CHAR),
    wydarzenie_id_wydarzenie INTEGER NOT NULL
);

ALTER TABLE lokalizacja ADD CONSTRAINT lokalizacja_pk PRIMARY KEY ( id_lokalizacja );

CREATE TABLE materialy (
    id_materialu              INTEGER NOT NULL,
    nazwa_materialu           VARCHAR2(25 CHAR),
    dostepna_ilosc_materialow INTEGER,
    wymagana_ilosc_materialow INTEGER,
    grupy_materialow_id_fk    INTEGER NOT NULL
);

ALTER TABLE materialy ADD CONSTRAINT materialy_pk PRIMARY KEY ( id_materialu );

CREATE TABLE miejscowosci (
    id_miejscowosci    INTEGER NOT NULL,
    nazwa_miejscowosci VARCHAR2(25 CHAR),
    kod_pocztowy       VARCHAR2(10 CHAR)
);

ALTER TABLE miejscowosci ADD CONSTRAINT miejscowosci_pk PRIMARY KEY ( id_miejscowosci );

CREATE TABLE oferty (
    id_oferty           INTEGER NOT NULL,
    typ_pakietu_oferty  VARCHAR2(20 CHAR),
    cena_pakietu        FLOAT(2),
    czas_trwania_oferty INTERVAL DAY (0) TO SECOND(0),
    opis_oferty         VARCHAR2(100 CHAR)
);

ALTER TABLE oferty ADD CONSTRAINT oferty_pk PRIMARY KEY ( id_oferty );

CREATE TABLE opinia_klienta (
    id_opinia_klienta        INTEGER NOT NULL,
    skala_opinii_klienta     VARCHAR2(5 CHAR),
    tresc_opinii_klienta     VARCHAR2(100 CHAR),
    informacja_zwrotna_id_fk INTEGER NOT NULL,
    klienci_id_fk            INTEGER NOT NULL
);

ALTER TABLE opinia_klienta ADD CONSTRAINT opinia_klienta_pk PRIMARY KEY ( id_opinia_klienta );

CREATE TABLE pracownicy (
    id_pracownicy    INTEGER NOT NULL,
    imie_pracownika  VARCHAR2(35 CHAR),
    nazwisko_klienta VARCHAR2(30 CHAR)
);

ALTER TABLE pracownicy ADD CONSTRAINT pracownicy_pk PRIMARY KEY ( id_pracownicy );

CREATE TABLE pracownik_na_zlecenie (
    zlecenia_id_fk   INTEGER NOT NULL,
    pracownicy_id_fk INTEGER NOT NULL
);

CREATE TABLE transport (
    id_transport                  INTEGER NOT NULL,
    rodzaj_transportu             VARCHAR2(30 CHAR),
    tablica_rejestracyjna         VARCHAR2(10 CHAR),
    ilosc_pasazerow_w_transporcie INTEGER,
    pojemnosc_transportowa        VARCHAR2(20 CHAR),
    wydarzenie_id_fk              INTEGER NOT NULL
);

ALTER TABLE transport ADD CONSTRAINT transport_pk PRIMARY KEY ( id_transport );

CREATE TABLE utwor (
    id_utwor               INTEGER NOT NULL,
    nazwa_utworu           VARCHAR2(30 CHAR),
    wykonawca_utworu       VARCHAR2(35 CHAR),
    licencja_utworu        VARCHAR2(25 CHAR),
    gatunek_muzyczny_id_fk INTEGER NOT NULL
);

ALTER TABLE utwor ADD CONSTRAINT utwor_pk PRIMARY KEY ( id_utwor );

CREATE TABLE uzyte_materialy (
    oferty_id_fk    INTEGER NOT NULL,
    materialy_id_fk INTEGER NOT NULL
);

CREATE TABLE wydarzenie (
    id_wydarzenie    INTEGER NOT NULL,
    nazwa_wydarzenia VARCHAR2(50 CHAR),
    typ_wydarzenia   VARCHAR2(25 CHAR),
    data_wydarzenia  DATE,
    zlecenia_id_fk   INTEGER NOT NULL
);

ALTER TABLE wydarzenie ADD CONSTRAINT wydarzenie_pk PRIMARY KEY ( id_wydarzenie );

CREATE TABLE zabawy (
    id_zabawy                   INTEGER NOT NULL,
    nazwa_zabawy                VARCHAR2(20 CHAR),
    opis_zabawy                 VARCHAR2(50 CHAR),
    ilosc_animatorow_do_zabawy  INTEGER,
    ilosc_uczestnikow_do_zabawy INTEGER,
    materialy_id_fk             INTEGER NOT NULL
);

ALTER TABLE zabawy ADD CONSTRAINT zabawy_pk PRIMARY KEY ( id_zabawy );

CREATE TABLE zamowienia (
    id_zamowienia               INTEGER NOT NULL,
    osoba_do_odbioru_zamowienia VARCHAR2(65 CHAR),
    sposob_dostawy_zamowienia   VARCHAR2(20 CHAR),
    osoba_zamawiajaca           VARCHAR2(65 CHAR)
);

ALTER TABLE zamowienia ADD CONSTRAINT zamowienia_pk PRIMARY KEY ( id_zamowienia );

CREATE TABLE zlecenia (
    id_zlecenia               INTEGER NOT NULL,
    wstepna_cena_zlecenia     FLOAT(3),
    data_wystawienia_zlecenia DATE,
    status_zlecenia           VARCHAR2(15 CHAR),
    klienci_id_fk             INTEGER NOT NULL,
    oferty_id_fk              INTEGER NOT NULL
);

ALTER TABLE zlecenia ADD CONSTRAINT zlecenia_pk PRIMARY KEY ( id_zlecenia );

ALTER TABLE adresy_klientow
    ADD CONSTRAINT adr_kl_msc_fk FOREIGN KEY ( miejscowosci_id_fk )
        REFERENCES miejscowosci ( id_miejscowosci );

ALTER TABLE adresy_lokalizacji
    ADD CONSTRAINT adr_lok_adr_fk FOREIGN KEY ( adresy_id_fk )
        REFERENCES adresy ( id_adresy );

ALTER TABLE adresy_lokalizacji
    ADD CONSTRAINT adr_lok_lok_fk FOREIGN KEY ( lokalizacja_id_fk )
        REFERENCES lokalizacja ( id_lokalizacja );

ALTER TABLE adresy_lokalizacji
    ADD CONSTRAINT adr_lok_msc_fk FOREIGN KEY ( miejscowosci_id_fk )
        REFERENCES miejscowosci ( id_miejscowosci );

ALTER TABLE adresy_pracownikow
    ADD CONSTRAINT adr_prc_adr_fk FOREIGN KEY ( adresy_id_fk )
        REFERENCES adresy ( id_adresy );

ALTER TABLE adresy_pracownikow
    ADD CONSTRAINT adr_prc_msc_fk FOREIGN KEY ( miejscowosci_id_fk )
        REFERENCES miejscowosci ( id_miejscowosci );

ALTER TABLE adresy_pracownikow
    ADD CONSTRAINT adr_prc_prc_fk FOREIGN KEY ( pracownicy_id_fk )
        REFERENCES pracownicy ( id_pracownicy );

ALTER TABLE adresy_klientow
    ADD CONSTRAINT adresy_klienta_adresy_fk FOREIGN KEY ( adresy_id_fk )
        REFERENCES adresy ( id_adresy );

ALTER TABLE adresy_klientow
    ADD CONSTRAINT adresy_klienta_klienci_fk FOREIGN KEY ( klienci_id_fk )
        REFERENCES klienci ( id_klienci );

ALTER TABLE czas_zamowienia
    ADD CONSTRAINT czas_zam_zam_fk FOREIGN KEY ( zamowienia_id_fk )
        REFERENCES zamowienia ( id_zamowienia );

ALTER TABLE gatunek_muzyczny
    ADD CONSTRAINT gat_muz_grp_fk FOREIGN KEY ( grupy_wiekowe_id_fk )
        REFERENCES grupy_wiekowe ( id_grupy_wiekowe );

ALTER TABLE grupy_materialow
    ADD CONSTRAINT grp_mat_zam_fk FOREIGN KEY ( zamowienia_id_fk )
        REFERENCES zamowienia ( id_zamowienia );

ALTER TABLE grupy_wiekowe
    ADD CONSTRAINT grp_wie_zab_fk FOREIGN KEY ( zabawy_id_fk )
        REFERENCES zabawy ( id_zabawy );

ALTER TABLE informacja_zwrotna
    ADD CONSTRAINT inf_zw_wyd_fk FOREIGN KEY ( wydarzenie_id_fk )
        REFERENCES wydarzenie ( id_wydarzenie );

ALTER TABLE kontakt_do_klienta
    ADD CONSTRAINT kon_kl_fk FOREIGN KEY ( klienci_id_fk )
        REFERENCES klienci ( id_klienci );

ALTER TABLE kontakt_do_pracownika
    ADD CONSTRAINT kon_prc_fk FOREIGN KEY ( pracownicy_id_fk )
        REFERENCES pracownicy ( id_pracownicy );

ALTER TABLE lokalizacja
    ADD CONSTRAINT lok_wyd_fk FOREIGN KEY ( wydarzenie_id_wydarzenie )
        REFERENCES wydarzenie ( id_wydarzenie );

ALTER TABLE materialy
    ADD CONSTRAINT mat_grp_fk FOREIGN KEY ( grupy_materialow_id_fk )
        REFERENCES grupy_materialow ( id_grupy_materialow );

ALTER TABLE opinia_klienta
    ADD CONSTRAINT op_kl_inf_fk FOREIGN KEY ( informacja_zwrotna_id_fk )
        REFERENCES informacja_zwrotna ( id_informacja_zwrotna );

ALTER TABLE opinia_klienta
    ADD CONSTRAINT op_kl_kl_fk FOREIGN KEY ( klienci_id_fk )
        REFERENCES klienci ( id_klienci );

ALTER TABLE pracownik_na_zlecenie
    ADD CONSTRAINT prc_zlec_fk FOREIGN KEY ( pracownicy_id_fk )
        REFERENCES pracownicy ( id_pracownicy );

ALTER TABLE transport
    ADD CONSTRAINT trans_wyd_fk FOREIGN KEY ( wydarzenie_id_fk )
        REFERENCES wydarzenie ( id_wydarzenie );

ALTER TABLE utwor
    ADD CONSTRAINT utw_gat_fk FOREIGN KEY ( gatunek_muzyczny_id_fk )
        REFERENCES gatunek_muzyczny ( id_gatunek_muzyczny );

ALTER TABLE uzyte_materialy
    ADD CONSTRAINT uzyt_mat_fk FOREIGN KEY ( materialy_id_fk )
        REFERENCES materialy ( id_materialu );

ALTER TABLE uzyte_materialy
    ADD CONSTRAINT uzyt_oft_fk FOREIGN KEY ( oferty_id_fk )
        REFERENCES oferty ( id_oferty );

ALTER TABLE wydarzenie
    ADD CONSTRAINT wyd_zlec_fk FOREIGN KEY ( zlecenia_id_fk )
        REFERENCES zlecenia ( id_zlecenia );

ALTER TABLE zabawy
    ADD CONSTRAINT zab_mat_fk FOREIGN KEY ( materialy_id_fk )
        REFERENCES materialy ( id_materialu );

ALTER TABLE zlecenia
    ADD CONSTRAINT zlec_kl_fk FOREIGN KEY ( klienci_id_fk )
        REFERENCES klienci ( id_klienci );

ALTER TABLE zlecenia
    ADD CONSTRAINT zlec_oft_fk FOREIGN KEY ( oferty_id_fk )
        REFERENCES oferty ( id_oferty );

ALTER TABLE pracownik_na_zlecenie
    ADD CONSTRAINT zlec_prc_fk FOREIGN KEY ( zlecenia_id_fk )
        REFERENCES zlecenia ( id_zlecenia );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            26
-- CREATE INDEX                             0
-- ALTER TABLE                             51
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
